901. Online Stock Span

class StockSpanner:

    def __init__(self):
        self.stack = []

    def next(self, price: int) -> int:
        span = 1
        while self.stack and self.stack[-1][0] <= price:
            span += self.stack[-1][1]
            self.stack.pop()
        self.stack.append((price,span))
        return span
                

# Your StockSpanner object will be instantiated and called as such:
# obj = StockSpanner()
# param_1 = obj.next(price)


Same problem can be done using a function as shown below:

Approach 1:

def Span(arr):
  s = []
  for i in range(len(arr)-1,-1,-1):
    count = 1
    j = i-1
    while j>0 and arr[j]< arr[i]:
      count += 1
      j -= 1
    s.append(count)
  s = s[::-1]
  return s

arr = [100,80,60,70,60,75,85]
output = Span(arr)
print(output)

Approach:2

from collections import deque

def StockSpan(arr):
  stack = deque()
  stack.append(0)
  print(1,end=" ")

  for i in range(1,len(arr)):
    while len(stack) != 0 and arr[stack[-1]]<arr[i]:
      stack.pop()
    if len(stack) == 0:
      print(i+1,end=" ")
    else:
      print(i-stack[-1],end=" ")
    stack.append(i)
arr = [100,80,60,70,60,75,85]
StockSpan(arr)
